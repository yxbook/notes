input {
 stdin { }
    jdbc {
        #需要同步的数据库
        jdbc_connection_string => "jdbc:mysql://localhost:30090/iot_FgVDFEyGda?useUnicode=true&characterEncoding=utf-8&useSSL=false"
        jdbc_user => "sddt"
        jdbc_password => "sddt8888"
        #本地jar包
        jdbc_driver_library => "/home/sddt/zm/logstash/mysql-connector-java-8.0.18.jar"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "50000"
        #获取到记录的SQL查询语句
        statement => "select id, data_time, data_value, feed_id, create_time, modify_time, prop from dosage_phase where modify_time >= :sql_last_value"
        #定时字段 各字段含义（由左至右）分、时、天、月、年，全部为*默认含义为每分钟都更新
        schedule => "* * * * *"
        # 是否记录上次执行结果, 如果为真,将会把上次执行到的 tracking_column 字段的值记录下来,保存到 last_run_metadata_path 指定的文件中
        record_last_run => true
        # 是否需要记录某个column 的值,如果record_last_run为真,可以自定义我们需要 track 的 column 名称，此时该参数就要为 true. 否则默认 track 的是 timestamp 的值.
         use_column_value => true
        # 如果 use_column_value 为真,需配置此参数. track 的数据库 column 名,该 column 必须是递增的. 一般是mysql主键
        tracking_column => "modify_time"
        tracking_column_type => "timestamp"
        last_run_metadata_path => "/home/sddt/zm/logstash/phase/logstash_capital_bill_last_id"
        # 是否清除 last_run_metadata_path 的记录,如果为真那么每次都相当于从头开始查询所有的数据库记录
        # clean_run => false
        # 是否将 字段(column) 名称转小写
        lowercase_column_names => false
    }
 }

 output {
     stdout {
        codec => json_lines
    }
    elasticsearch {
        #ESIP地址与端口
        hosts => "localhost:30091"
        #ES索引名称（自己定义的）
        index => "dosage_phase"
        #文档类型
        document_type => "_doc"
        #文档类型id，%{id}意思是取查询出来的id的值，并将其映射到es中_id字段中
        document_id => "%{id}"
    }
}
